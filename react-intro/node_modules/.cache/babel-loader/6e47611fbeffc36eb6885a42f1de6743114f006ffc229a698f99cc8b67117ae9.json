{"ast":null,"code":"var _jsxFileName = \"/Users/fsoymaz/Desktop/react-project/react-intro/src/pages/Homepage/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n  const myAsyncFunction = () => {\n    return new Promise((resolve, reject) => {\n      // resolve ve reject fonksiyonları şu işe yarar :\n      // resolve fonksiyonu ile promise'in sonucu başarılı bir şekilde döndürülür. \n      //reject fonksiyonu ile promise'in sonucu başarısız bir şekilde döndürülür.\n      reject('HTTP VERİSİ');\n    });\n  };\n  useEffect(() => {\n    //makeAsyncCall();\n    makeHttpCall();\n  }, []);\n  const makeAsyncCall = async () => {\n    //myAsyncFunction().then((response) => { // async işlem başarı ise (resolve edildi ise)\n    //    console.log(\"işlem başarılı cevap: \", response);\n    //})\n    //.catch((error) => { // async işlem başarısız ise (reject edildi ise)\n    //    console.log(\"işlem başarısız cevap: \", error);\n    //})\n    //.finally(() => { // finally fonksiyonu ile promise'in sonucu ne olursa olsun çalıştırılacak fonksiyon belirlenir.\n    //    console.log(\"işlem bitti\");\n    //}); // en sonunda çalışacak fonksiyon\n    // es2017 ile gelen async ve await kullanımı\n    try {\n      let response = await myAsyncFunction();\n      console.log(\"işlem başarılı cevap: \", response);\n    } catch (e) {\n      console.log(\"işlem başarısız cevap: \", e);\n    }\n  };\n  const makeHttpCall = async () => {\n    try {\n      let response = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n      let data = await response.json();\n      console.log(\"http işlem başarılı cevap: \", data);\n    } catch (e) {\n      console.log(\"http işlem başarısız cevap: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/about\",\n      children: \"About a git\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_s(Homepage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","Link","jsxDEV","_jsxDEV","Homepage","_s","myAsyncFunction","Promise","resolve","reject","makeHttpCall","makeAsyncCall","response","console","log","e","fetch","data","json","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/fsoymaz/Desktop/react-project/react-intro/src/pages/Homepage/Homepage.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Homepage() {\n\tconst myAsyncFunction = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// resolve ve reject fonksiyonları şu işe yarar :\n\t\t\t// resolve fonksiyonu ile promise'in sonucu başarılı bir şekilde döndürülür. \n\t\t\t//reject fonksiyonu ile promise'in sonucu başarısız bir şekilde döndürülür.\n\t\t\t\treject('HTTP VERİSİ')\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\t//makeAsyncCall();\n\t\tmakeHttpCall();\n\n\t}, []);\n\n\tconst makeAsyncCall = async () => {\n\t\t//myAsyncFunction().then((response) => { // async işlem başarı ise (resolve edildi ise)\n\t\t//    console.log(\"işlem başarılı cevap: \", response);\n\t\t//})\n\t\t//.catch((error) => { // async işlem başarısız ise (reject edildi ise)\n\t\t//    console.log(\"işlem başarısız cevap: \", error);\n\t\t//})\n\t\t//.finally(() => { // finally fonksiyonu ile promise'in sonucu ne olursa olsun çalıştırılacak fonksiyon belirlenir.\n\t\t//    console.log(\"işlem bitti\");\n\t\t//}); // en sonunda çalışacak fonksiyon\n\t\t// es2017 ile gelen async ve await kullanımı\n\t\ttry {\n\t\t\tlet response = await myAsyncFunction();\n\t\t\tconsole.log(\"işlem başarılı cevap: \", response);\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(\"işlem başarısız cevap: \", e);\n\t\t}\n\t}\n\n\tconst makeHttpCall = async () => {\n\t\ttry {\n\t\t\tlet response = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n\t\t\tlet data = await response.json();\n\t\t\tconsole.log(\"http işlem başarılı cevap: \", data);\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(\"http işlem başarısız cevap: \", e);\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<button className='btn btn-primary'>Homepage</button>\n\t\t\t<br />\n\t\t\t<Link to={\"/about\"}>About a git</Link>\n\t\t</div>\n\t)\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC7B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACvC;MACA;MACA;MACCA,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC,CAAC;EACH,CAAC;EAEDT,SAAS,CAAC,MAAM;IACf;IACAU,YAAY,CAAC,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI;MACH,IAAIC,QAAQ,GAAG,MAAMN,eAAe,CAAC,CAAC;MACtCO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;IAChD,CAAC,CACD,OAAOG,CAAC,EAAE;MACTF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,CAAC,CAAC;IAC1C;EACD,CAAC;EAED,MAAML,YAAY,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACH,IAAIE,QAAQ,GAAG,MAAMI,KAAK,CAAC,8CAA8C,CAAC;MAC1E,IAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAChCL,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEG,IAAI,CAAC;IACjD,CAAC,CACD,OAAOF,CAAC,EAAE;MACTF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,CAAC,CAAC;IAC/C;EACD,CAAC;EACD,oBACCZ,OAAA;IAAAgB,QAAA,gBACChB,OAAA;MAAQiB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA,CAACF,IAAI;MAACwB,EAAE,EAAE,QAAS;MAAAN,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAER;AAACnB,EAAA,CArDuBD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}