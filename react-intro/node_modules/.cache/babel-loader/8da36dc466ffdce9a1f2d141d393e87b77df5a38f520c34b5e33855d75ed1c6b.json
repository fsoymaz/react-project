{"ast":null,"code":"var _jsxFileName = \"/Users/fsoymaz/Desktop/react-project/react-intro/src/pages/AddProduct/addProduct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddProduct() {\n  _s();\n  const [newProduct, setNewProduct] = useState({\n    title: ''\n    // Diğer ürün verilerini buraya ekleyebilirsiniz\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProduct(prevProduct => ({\n      ...prevProduct,\n      [name]: value\n    }));\n  };\n  const handleAddProduct = async () => {\n    try {\n      const response = await fetch('https://dummyjson.com/products/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newProduct)\n      });\n      if (response.ok) {\n        const addedProduct = await response.json();\n        console.log('Yeni ürün eklendi:', addedProduct);\n      } else {\n        console.error('Ürün ekleme hatası:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Ürün ekleme hatası:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yeni \\xDCr\\xFCn Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: newProduct.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddProduct,\n        children: \"\\xDCr\\xFCn\\xFC Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AddProduct, \"g2UG8mIo/Jn0laA9q9lVWK76Tfw=\");\n_c = AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddProduct","_s","newProduct","setNewProduct","title","handleInputChange","e","name","value","target","prevProduct","handleAddProduct","response","fetch","method","headers","body","JSON","stringify","ok","addedProduct","json","console","log","error","statusText","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/fsoymaz/Desktop/react-project/react-intro/src/pages/AddProduct/addProduct.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function AddProduct() {\n  const [newProduct, setNewProduct] = useState({\n    title: '',\n    // Diğer ürün verilerini buraya ekleyebilirsiniz\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewProduct((prevProduct) => ({\n      ...prevProduct,\n      [name]: value,\n    }));\n  };\n\n  const handleAddProduct = async () => {\n    try {\n      const response = await fetch('https://dummyjson.com/products/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newProduct),\n      });\n\n      if (response.ok) {\n        const addedProduct = await response.json();\n        console.log('Yeni ürün eklendi:', addedProduct);\n      } else {\n        console.error('Ürün ekleme hatası:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Ürün ekleme hatası:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Yeni Ürün Ekle</h2>\n      <form>\n        <label>\n          Title:\n          <input type=\"text\" name=\"title\" value={newProduct.title} onChange={handleInputChange} />\n        </label>\n        {/* Diğer ürün verileri için giriş alanlarını buraya ekleyebilirsiniz */}\n        <button type=\"button\" onClick={handleAddProduct}>\n          Ürünü Ekle\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC;IAC3CO,KAAK,EAAE;IACP;EACF,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCN,aAAa,CAAEO,WAAW,KAAM;MAC9B,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,UAAU;MACjC,CAAC,CAAC;MAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,YAAY,CAAC;MACjD,CAAC,MAAM;QACLE,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEZ,QAAQ,CAACa,UAAU,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,GAAO,QAEL,eAAA5B,OAAA;UAAOiC,IAAI,EAAC,MAAM;UAACzB,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEN,UAAU,CAACE,KAAM;UAAC6B,QAAQ,EAAE5B;QAAkB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAERhC,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACE,OAAO,EAAEvB,gBAAiB;QAAAgB,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9B,EAAA,CAhDuBD,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}